<xml>
	<class id="application">
		<properties>
			<property name="title" nolayout="true" type="string" set_fn="setTitle" get_fn="getTitle"/>
			<property name="name" nolayout="true" type="string" set_fn="setName" get_fn="getName"/>
		</properties>
	</class>
	
	<class id="Placement" enum="true" as_expression="true" internal_id="int" default_value="none">
		<properties>
			<property name="none" internal_id="PL_NONE"/>
			<property name="top" internal_id="PL_TOP"/>
			<property name="left" internal_id="PL_LEFT"/>
			<property name="right" internal_id="PL_RIGHT"/>
			<property name="bottom" internal_id="PL_BOTTOM"/>
			<property name="client" internal_id="PL_CLIENT"/>
			<property name="center" internal_id="PL_CENTER"/>
		</properties>
	</class>
	
	<class id="Listeners" nolayout="true">
		<properties>
			<property name="click" event_name="onClick" interface="OnClickListener" args="View v"/>
			<property name="keydown" event_name="onKey" interface="OnKeyListener" args="View v, int keyCode, KeyEvent event"/>
			<property name="drag" event_name="onDrag" interface="OnDragListener" args="View v, DragEvent event"/>
		</properties>
	</class>
	
	<class id="widget">
		<properties>
			<property name="x" layout_name="layout_x" ns="xkp" type="int" res_type="dimension" 
				set_xss="((XKPLayout.LayoutParams) <xss:e v='path'/>.getLayoutParams()).setLeft" get_fn="getLeft"/>
			<property name="y" layout_name="layout_y" ns="xkp" type="int" res_type="dimension" 
				set_xss="((XKPLayout.LayoutParams) <xss:e v='path'/>.getLayoutParams()).setTop" get_fn="getTop"/>
			
			<!-- fill_parent == match_parent and wrap_content  -->
			<!-- fill_parent is deprecated after android api 8 -->
			<property name="width" layout_name="layout_width" default_value="wrap_content" ns="android" type="int" res_type="dimension" 
				set_xss="((XKPLayout.LayoutParams) <xss:e v='path'/>.getLayoutParams()).setWidth" get_fn="getWidth"/>
			<property name="height" layout_name="layout_height" default_value="wrap_content" ns="android" type="int" res_type="dimension" 
				set_xss="((XKPLayout.LayoutParams) <xss:e v='path'/>.getLayoutParams()).setHeight" get_fn="getHeight"/>
			
			<property name="placement" layout_name="placement" ns="xkp" type="enum" 
				set_xss="((XKPLayout.LayoutParams) <xss:e v='path'/>.getLayoutParams()).setPlacement" 
				property_xss="((XKPLayout.LayoutParams) <xss:e v='path'/>.getLayoutParams()).getPlacement()"/>
			
			<property name="autosize_x" layout_name="autosize_x" ns="xkp" type="bool" 
				set_xss="((XKPLayout.LayoutParams) <xss:e v='path'/>.getLayoutParams()).setAutoSizeX" 
				get_xss="((XKPLayout.LayoutParams) <xss:e v='path'/>.getLayoutParams()).getAutoSizeX()"/>
			<property name="autosize_y" layout_name="autosize_y" ns="xkp" type="bool" 
				set_xss="((XKPLayout.LayoutParams) <xss:e v='path'/>.getLayoutParams()).setAutoSizeY" 
				get_xss="((XKPLayout.LayoutParams) <xss:e v='path'/>.getLayoutParams()).getAutoSizeY()"/>
			
			<property name="enabled" layout_name="enabled" ns="android" type="bool" set_fn="setEnabled" get_fn="isEnabled"/>
			
			<!-- top, bottom, left, right, center_vertical, fill_vertical, center_horizontal, fill_horizontal, center, fill, clip_vertical, clip_horizontal-->
			<!--
			<property name="layout_gravity" ns="android" type="enum"/>
			
			<property name="layout_margin" ns="android" type="int"/>
			<property name="layout_weight" ns="android" type="float"/>
			-->
		</properties>
	</class>
	
	<class id="textview" super="widget">
		<imports>
			<import name="android.view.View.OnClickListener"/>
		</imports>
		<properties>
			<property name="caption" layout_name="text" ns="android" type="string" res_type="str_reference" set_fn="setText" get_fn="getText"/>
		</properties>
		<events>
			<event name="click" event_name="onClick" interface="OnClickListener" args="View v"/>
		</events>
	</class>
	
	<class id="label" super="textview" name="TextView">
		<imports>
			<import name="android.widget.TextView"/>
		</imports>
	</class>
	
	<class id="button" super="textview" name="Button">
		<imports>
			<import name="android.widget.Button"/>
		</imports>
	</class>
	
	<class id="checkbox" super="textview" name="CheckBox">
		<imports>
			<import name="android.widget.CheckBox"/>
			<import name="android.widget.CompoundButton"/>
			<import name="android.widget.CompoundButton.OnCheckedChangeListener"/>
		</imports>
		<properties>
			<property name="checked" layout_name="checked" ns="android" set_fn="setChecked" get_fn="isChecked"/>
		</properties>
		<events>
			<event name="change" event_name="onCheckedChanged" interface="OnCheckedChangeListener" args="CompoundButton v, boolean isChecked"/>
		</events>
	</class>
	
	<class id="radiobutton" super="textview" name="RadioButton">
		<imports>
			<import name="android.widget.RadioButton"/>
		</imports>
	</class>
	
	<class id="editbox" super="widget" name="EditText">
		<imports>
			<import name="android.widget.EditText"/>
		</imports>
		<properties>
			<property name="text" layout_name="text" ns="android" type="string" res_type="str_reference" set_fn="setText" get_xss="getText().toString()"/>
		</properties>
	</class>
	
	<class id="listbox" super="widget" name="ListView">
		<imports>
			<import name="android.widget.ListView"/>
		</imports>
		<properties>
		</properties>
	</class>
	
	<class id="holder" super="widget" xkpview="true" name="XKPLayout">
	</class>
	
	<class id="div" super="holder">
	</class>
	
	<class id="switcher" super="widget" xkpview="true" name="XKPSwitcher">
		<properties>
			<property name="active" layout_name="current" ns="xkp" type="string" res_type="id_reference" set_fn="setDisplayedChildByName" get_fn="getDisplayedChildByName"/>
			<property name="active_index" layout_name="currentIndex" ns="xkp" type="int" set_fn="setDisplayedChild" get_fn="getDisplayedChild"/>
		</properties>
	</class>
	
	<class id="replicator" super="widget" xkpview="true" name="XKPReplicator">
		<properties>
			<property name="template" layout_name="template" ns="xkp" type="string" res_type="id_reference"/>
			<property name="items" layout_name="items" ns="xkp" type="array"/>
		</properties>
	</class>
	
	<class id="image" super="widget" name="ImageView">
		<properties>
			<property name="source" layout_name="src" ns="android" type="string" res_type="drawable"/>
		</properties>
	</class>
	
	<class id="object"/>
</xml>
