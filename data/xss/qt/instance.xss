<xss:code>
	if(it.properties)
	{
		for(var p in it.properties)
		{
			string prop_name = it.id + "_" + p.name;
			string set_prop_name = "set_" + prop_name;
			string get_prop_name = "get_" + prop_name;

			if(p.set || p.get)
			{
				//compiler.log(p.type);

				// push methods of properties in array for include in class declaration
				methods += set_prop_name;
				methods += get_prop_name;

				// update methods's name of property for idiom translations
				p.set_fn = set_prop_name;
				p.get_fn = get_prop_name;

				string var_name = prop_name;

				//string var_decl = (p.type) ? (p.type + " " + var_name) : ("one_type " + var_name); // not implement yet
				string var_decl = "one_type " + var_name; // for now
				priv_vars += var_decl;

				// it's a idea of an array of object that contain all 
				// private variable of custom properties
				// and this requerid to implement, a 'object type' and 'p.type'
				//object prop_variable = (name = var_name, type = p.type);

				out(indent = 0)
				{
					void Widget::<xss:e value="set_prop_name"/>(<xss:e value="p.type"/> value)
					<xss:open_brace/>
						<xss:e value="var_name"/> = value;
				}

				if(p.set)
				{
					out(indent = 1)
					{
						<xss:e value="p.set.generate()"/>
					}
				}

				out(indent = 0)
				{
					<xss:close_brace/>
					<xss:return/>
				}
			}
			else
			{
				// do nothing in C/C++
				//compiler.log("plain property => " + it.id + "_" + p.name);
			}
		}
	} // if(it.properties)

	if(it.events)
	{
		for(var e in it.events)
		{
			if(!e.implemented)
				continue;

			string evt_name = "on_" + it.id + "_" + e.qt_name + "()";

			// push event in array for include in class declaration
			methods += evt_name;

			out(indent = 0)
			{
				void Widget::<xss:e value="evt_name"/>
				<xss:open_brace/>
			}
				
			for(var impl in e.impls)
			{
				out(indent = 1)
				{
					<xss:e>impl.generate_code()</xss:e>
				}
			}
				
			out(indent = 0)
			{
				<xss:close_brace/>
				<xss:return/>
			}
		}
	} // if(it.events)
		
	if(it.methods)
	{
		//reset method is twise repeated, why?

		for(var m in it.methods)
		{
			//compiler.log(it.id + "-" + m.name);

			string mthd_name = m.name + "(" + m.args.generate() + ")";

			// push method in array for include in class declaration
			methods += mthd_name;

			out(indent = 0)
			{
				void Widget::<xss:e value="mthd_name"/>
				<xss:open_brace/>
					<xss:e>m.generate_code()</xss:e>
				<xss:close_brace/>
				<xss:return/>
			}
		}
	} // if(it.methods)
</xss:code>
