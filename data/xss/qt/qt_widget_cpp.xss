#include "widget.h"
#include "ui_widget.h"

<xss:e value="main_class"/>::<xss:e value="main_class"/>(QWidget *parent) :
    QWidget(parent),
    ui(new Ui::<xss:e value="main_class"/>)
{
    ui->setupUi(this);
}

<xss:e value="main_class"/>::~<xss:e value="main_class"/>()
{
    delete ui;
}

void <xss:e value="main_class"/>::changeEvent(QEvent *e)
{
    QWidget::changeEvent(e);
    switch (e->type()) {
    case QEvent::LanguageChange:
        ui->retranslateUi(this);
        break;
    default:
        break;
    }
}

<xss:class entry_point="generate_cpp">
	method generate_component(var cmp, var parent)
	{
		if(cmp.children)
		{
			for(var child in cmp.children)
				generate_component(child, cmp);
		}

		//compiler.render_instance(cmp, "instance.xss", indent = 0);
		out()
		{
			<xss:file output="temporal_file.cpp" src="instance.xss">
				<parameter name="main_class" access="read"/>
				<parameter name="methods" access="read_write"/>
				<parameter name="priv_vars" access="read_write"/>
				<parameter name="cmp" access="read"/>
			</xss:file>
		}
	}

	method generate_cpp()
	{
		generate_component(application, null);
	}
</xss:class>
