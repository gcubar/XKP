<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
    <author>Generated by XSS. XKP 2011. E. Santos.</author>
    <class><xss:e value="main_class"/></class>

<xss:class entry_point="generate_ui">
    method generate_properties(var cmp, int ind)
    {
        for(var p in cmp.properties)
  	    {
			//compiler.log("----------- default_value: " + p.default_value + " custom_type: " + p.custom_type);

			if(!p.qt_ui)
				continue;
			
            string prop_type = p.type;
            string prop_name = p.name;
			
			var prop = cmp.find_property(prop_name);
			
			//if(p.default_value != null)
			if(p.default_value)
			{
				p.value = p.default_value;
				prop.value = p.default_value;
			}
				
            var prop_value = compiler.evaluate_property(cmp, prop_name);
			var pvalue = prop.generate_value();
			
			if(p.custom_type)
			{
				//var prop = cmp.find_property(p.name);
				prop_value = prop.generate_value();
				compiler.log("Inside if: " + p.name + " " + prop_value);
			}
            
            // don't generate property whithout assign value
			if(!prop_value)
				continue;
			
			compiler.log(cmp.id + "." + prop_name + " ##/> 1=" + prop_value + ", 2=" + pvalue + ", 3=" + prop.value + ", 4=" + p.value);
			
            if(prop_type == "int")
                prop_type = "number";
            
            // translate property name if it not coincided with qt_name
            if(p.qt_name)
                prop_name = p.qt_name;
			
            out(indent = ind)
            {
                <property name="<xss:e value="prop_name"/>">
                    <<xss:e value="prop_type"/>><xss:e value="prop_value"/></<xss:e value="prop_type"/>>
                </property>
            }
        }
    }
    
	// this recursive method is for generate all components, 
	// inclusively containers components with childs
	method generate_component(var cmp, var parent, int ind)
	{
		if(!cmp.qt_ui)
			return;

		out(indent = ind)
		{
			<widget class="<xss:e value="cmp.tag_name"/>" name="<xss:e value="cmp.id"/>">
				<property name="geometry">
					<rect>
						<x><xss:e value="cmp.x"/></x>
						<y><xss:e value="cmp.y"/></y>
						<width><xss:e value="cmp.width"/></width>
						<height><xss:e value="cmp.height"/></height>
					</rect>
				</property>
		}

		generate_properties(cmp, ind);

		// generate all childrens recursively
		if(cmp.children)
		{
			for(var child in cmp.children)
				generate_component(child, cmp, ind + 1);
		}

		out(indent = ind)
		{
			</widget>
		}
	}

	method generate_ui()
	{
		generate_component(application, null, 1);
	}
</xss:class>

    <layoutdefault spacing="3" margin="5"/>
    <resources/>
    <connections/>
</ui>
